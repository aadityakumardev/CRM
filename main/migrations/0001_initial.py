# Generated by Django 3.2.4 on 2022-12-02 12:06

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ComingStockLog',
            fields=[
                ('cmlog_id', models.CharField(default='', max_length=12, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('stock_value', models.DecimalField(decimal_places=2, max_digits=20)),
                ('supplier_id', models.CharField(max_length=15)),
                ('material_type', models.CharField(max_length=15)),
                ('state', models.CharField(choices=[('pending', 'pending'), ('accepted', 'accepted'), ('declined', 'declined')], default='pending', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('customer_id', models.CharField(default='', max_length=10, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=32, validators=[django.core.validators.RegexValidator(regex='^[A-Za-z][A-Za-z0-9_]{7,29}$')])),
                ('contact_number', models.CharField(max_length=16, unique=True, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{8,15}$')])),
                ('alternate_number', models.CharField(blank=True, max_length=16, null=True, unique=True, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{8,15}$')])),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=6)),
                ('appelation', models.CharField(choices=[('Mr', 'Mr.'), ('Miss', 'Miss'), ('Mrs', 'Mrs.')], max_length=4)),
                ('email_id', models.EmailField(max_length=128)),
                ('address', models.CharField(max_length=128)),
                ('city', models.CharField(max_length=32)),
                ('State', models.CharField(choices=[('AN', 'Andaman and Nicobar Islands'), ('AP', 'Andhra Pradesh'), ('AR', 'Arunachal Pradesh'), ('AS', 'Assam'), ('BR', 'Bihar'), ('CG', 'Chhattisgarh'), ('CH', 'Chandigarh'), ('DN', 'Dadra and Nagar Haveli'), ('DD', 'Daman and Diu'), ('DL', 'Delhi'), ('GA', 'Goa'), ('GJ', 'Gujarat'), ('HR', 'Haryana'), ('HP', 'Himachal Pradesh'), ('JK', 'Jammu and Kashmir'), ('JH', 'Jharkhand'), ('KA', 'Karnataka'), ('KL', 'Kerala'), ('LA', 'Ladakh'), ('LD', 'Lakshadweep'), ('MP', 'Madhya Pradesh'), ('MH', 'Maharashtra'), ('MN', 'Manipur'), ('ML', 'Meghalaya'), ('MZ', 'Mizoram'), ('NL', 'Nagaland'), ('OD', 'Odisha'), ('PB', 'Punjab'), ('PY', 'Pondicherry'), ('RJ', 'Rajasthan'), ('SK', 'Sikkim'), ('TN', 'Tamil Nadu'), ('TS', 'Telangana'), ('TR', 'Tripura'), ('UP', 'Uttar Pradesh'), ('UK', 'Uttarakhand'), ('WB', 'West Bengal')], max_length=2)),
                ('pincode', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(regex='^[1-9]{1}[0-9]{2}\\s{0,1}[0-9]{3}$')])),
            ],
        ),
        migrations.CreateModel(
            name='Engineer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('engineer_id', models.CharField(max_length=8)),
                ('name', models.CharField(max_length=63)),
                ('contact_number', models.CharField(max_length=16, unique=True, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{8,15}$')])),
                ('alternate_number', models.CharField(blank=True, max_length=16, null=True, unique=True, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{8,15}$')])),
                ('email_id', models.EmailField(max_length=128)),
                ('is_available', models.BooleanField(default=True)),
                ('is_multitasking', models.BooleanField(default=False)),
                ('current_bag_value', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='OutboundStockHandler',
            fields=[
                ('isid', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('numberofproducts', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('partcode', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=255)),
                ('serialnumber', models.CharField(blank=True, max_length=12, null=True)),
                ('modelnumber', models.CharField(blank=True, max_length=12, null=True)),
                ('price', models.PositiveIntegerField()),
                ('warranty', models.PositiveIntegerField()),
                ('unit', models.CharField(blank=True, max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('sid', models.CharField(default='', max_length=10, primary_key=True, serialize=False)),
                ('complain', models.CharField(max_length=127)),
                ('remark', models.CharField(max_length=255)),
                ('is_determined', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('TBC', 'To Be Clear'), ('TBB', 'To be Bypass'), ('EI', 'Engineer Inspection'), ('PFO', 'Pending For Outbound'), ('PFP', 'Pending For Payment'), ('TBD', 'To Be Delievered'), ('C', 'Closed')], default='TBC', max_length=4)),
                ('service_type', models.CharField(choices=[('NYS', 'Not Yet Set'), ('IW', 'In warranty'), ('OW', 'Out Warranty'), ('WSN', 'Without Serial Nuumber')], default='NYS', max_length=4)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('special_remark', models.CharField(max_length=127)),
                ('number_of_engineer_assigned', models.PositiveIntegerField(default=0)),
                ('customer_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.customer')),
            ],
        ),
        migrations.CreateModel(
            name='StockPaymentHandler',
            fields=[
                ('osid', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('numberofproducts', models.PositiveIntegerField(default=0)),
                ('serviceRef', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.service')),
            ],
        ),
        migrations.CreateModel(
            name='StockPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('productRef', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.product')),
                ('serviceRef', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.service')),
                ('stockPaymentHandlerRef', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.stockpaymenthandler')),
            ],
        ),
        migrations.CreateModel(
            name='PendingForOutbound',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_payed', models.BooleanField(default=False)),
                ('in_warranty', models.BooleanField(default=False)),
                ('pforef', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.outboundstockhandler')),
                ('pfpref', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.stockpaymenthandler')),
                ('productRef', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.product')),
                ('serviceRef', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.service')),
            ],
        ),
        migrations.CreateModel(
            name='PendingForInbound',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('productRef', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.product')),
                ('serviceRef', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.service')),
            ],
        ),
        migrations.CreateModel(
            name='PaymentRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(max_length=32)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=32)),
                ('payment_method', models.CharField(choices=[('Online', 'Online'), ('Cash On Delivery', 'Cash On Delivery')], max_length=20)),
                ('amount', models.PositiveIntegerField()),
                ('customerRef', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.customer')),
            ],
        ),
        migrations.AddField(
            model_name='outboundstockhandler',
            name='serviceRef',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.service'),
        ),
        migrations.CreateModel(
            name='OutboundStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('in_warranty', models.BooleanField(default=False)),
                ('pforef', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.outboundstockhandler')),
                ('pfpref', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.stockpaymenthandler')),
                ('productRef', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.product')),
                ('serviceRef', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.service')),
            ],
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serialnumber', models.CharField(blank=True, max_length=12, null=True)),
                ('modelnumber', models.CharField(blank=True, max_length=23, null=True)),
                ('price', models.PositiveIntegerField()),
                ('quantity', models.PositiveSmallIntegerField()),
                ('cgst', models.FloatField(default=9.0)),
                ('igst', models.FloatField(default=9.0)),
                ('amount', models.PositiveIntegerField(default=0)),
                ('productRef', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.product')),
            ],
        ),
        migrations.CreateModel(
            name='EngineerBag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modelnumber', models.CharField(blank=True, max_length=23, null=True)),
                ('price', models.PositiveIntegerField()),
                ('quantity', models.PositiveSmallIntegerField()),
                ('is_used', models.BooleanField(default=False)),
                ('is_inwarranty', models.BooleanField(default=False)),
                ('engineer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.engineer')),
                ('partcode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.product')),
                ('serviceRef', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.service')),
            ],
        ),
        migrations.AddField(
            model_name='engineer',
            name='serviceRef',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.service'),
        ),
        migrations.CreateModel(
            name='ComingStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('partcode', models.CharField(max_length=12)),
                ('quantity', models.PositiveIntegerField()),
                ('serial_numbers', models.JSONField(blank=True, default=None, null=True)),
                ('cmlogRef', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.comingstocklog')),
            ],
        ),
        migrations.CreateModel(
            name='ClosedLog',
            fields=[
                ('logId', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('remark', models.CharField(blank=True, max_length=64, null=True)),
                ('cutomerId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.customer')),
                ('outboundRef', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.outboundstock')),
                ('productRef', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.product')),
                ('serviceRef', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.service')),
            ],
        ),
    ]
